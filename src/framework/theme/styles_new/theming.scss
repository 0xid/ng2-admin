/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */


/**
 * This is a starting point where we declare the maps of themes and globally available functions/mixins
 */

@import 'core/mixins';
@import 'core/functions';

$themes: () !global;
$themes-non-processed: () !global;

@function map-set($map, $key, $value) {
  $new: ($key: $value);
  @return map-merge($map, $new);
}

@function nga-theme($key) {
  @return map-get($theme, $key);
}
@function nga-get-value($theme, $key, $value) {
  @if (type-of($value) == 'string') {
    $tmp: map-get($theme, $value);

    @if ($tmp != null) {
      @return nga-get-value($theme, $value, $tmp);
    }
  }

  @return map-get($theme, $key);
}

@function nga-register-theme($theme, $name,  $default: null) {

  $themes-non-processed: map-set($themes-non-processed, $name, $theme) !global;

  @if ($default != null) {
    $theme: map-merge(map-get($themes-non-processed, $default), $theme);
  }

  $theme-parsed: ();
  @each $key, $value in $theme {
    $theme-parsed: map-set($theme-parsed, $key, nga-get-value($theme, $key, $value));
  }

  @return map-set($themes, $name, $theme-parsed);
}

@mixin nga-install-component() {
  @each $theme-name, $theme in $themes {
    :host-context(.nga-theme-#{$theme-name}) {
      $theme: $theme !global;
      @debug $theme;
      @content;
    }
  }
}

@mixin nga-install-global() {
  @each $theme-name, $theme in $themes {
    .nga-theme-#{$theme-name} {
      $theme: $theme !global;

      @content;
    }
  }
}
